{"version":3,"sources":["styles/BaseStyle.ts","components/base/Button.tsx","constants.ts","components/home/HomeMain.tsx","components/home/HomeSide.tsx","pages/Home.tsx","routes/memo/index.tsx","components/trash/TrashMain.tsx","components/trash/TrashSide.tsx","components/trash/TrashContent.tsx","store/modules/memo.ts","containers/trash/TrashContainer.tsx","containers/trash/TrashContentContainer.tsx","routes/trash/index.tsx","components/memo/MemoMain.tsx","components/memo/MemoSide.tsx","components/memo/AddMemo.tsx","components/memo/MemoContent.tsx","containers/memo/MemoContainer.tsx","containers/memo/AddMemoContainer.tsx","containers/memo/MemoContentContainer.tsx","pages/Memo.tsx","pages/Trash.tsx","App.tsx","styles/GlobalStyle.ts","store/modules/index.ts","index.tsx"],"names":["Layout","styled","div","Container","Side","aside","SideBackBtn","Main","main","section","PAGE_PATHS","Wrapper","button","Button","props","children","to","onClick","HomeMain","MEMO","Menu","NavLink","HomeSide","activeClassName","TRASH","Home","Component","MemoRouter","path","exact","component","AddMemoContainer","MemoContentContainer","TrashMain","TrashItem","id","title","TrashSide","renderList","deletedMemos","map","val","key","HOME","TrashContent","createdAt","content","onRestore","createdAtToDate","Date","toLocaleString","Fragment","MemoActions","addMemo","type","payload","deleteMemo","memo","restoreMemo","initState","memoList","now","TrashContainer","this","memoState","match","isExact","length","connect","dispatch","memoActions","bindActionCreators","withRouter","TrashContentContainer","findMemo","find","parseInt","params","renderPage","TrashRouter","location","pathname","MemoItem","MemoSide","onSave","history","useState","setTitle","setContent","onClickSave","replace","window","alert","onSubmit","e","preventDefault","onChange","target","value","placeholder","MemoContent","onDelete","MemoContainer","Memo","Trash","App","GlobalStyle","createGlobalStyle","combineReducers","state","action","filter","sort","a","b","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e18e2f6a.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Layout = styled.div`\r\n    margin: 20px 5px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    width: 1200px;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    @media only screen and ( max-width: 1200px ){\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const Side = styled.aside`\r\n    width: 200px;\r\n    min-height: 600px;\r\n    border: 1px solid #ccc;\r\n    margin-right: 10px;\r\n    & h2 {\r\n        font-size: 25px;\r\n        font-weight: bold;\r\n        padding: 10px 5px;\r\n    }\r\n    & ul {\r\n        border-top: 1px solid #ccc;\r\n        margin-bottom : 5px;\r\n        & li {\r\n            border-bottom: 1px solid #ccc;\r\n            padding: 10px 5px;\r\n            font-weight: bold;\r\n            font-weight: 15px;\r\n            overflow: hidden;\r\n            text-overflow: ellipsis;\r\n            white-space: nowrap;\r\n            &:hover {\r\n                color: #000000;\r\n                background-color: #ecf0f1;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const SideBackBtn = styled.div`\r\n    font-size: 24px;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Main = styled.main`\r\n    width: 1000px;\r\n    border: 1px solid #ccc;\r\n    margin-right: 10px;\r\n    padding: 10px;\r\n`\r\n\r\nexport const MainContent = styled.section`\r\n    width: 100%;\r\n    border-top: 1px solid #ccc;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface BtnProps {\r\n    to?: string;\r\n    onClick?(): void;\r\n}\r\n\r\nconst Wrapper = styled.button`\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    margin: 0 10px 10px 0;\r\n    padding: 8px 16px;\r\n    background-color: #fff;\r\n    font-weight: bold;\r\n    &:hover{\r\n        background-color: #ecf0f1;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Button: React.FC<BtnProps> = (props) => {\r\n    const {children, to, onClick} = props;\r\n    const renderLink = () => {\r\n        if (!to) {\r\n            return <div></div>\r\n        }\r\n        return (\r\n            <Link to={to}><Wrapper>{children}</Wrapper></Link>\r\n        )\r\n    }\r\n    const renderBtn = () => {\r\n        return (\r\n            <Wrapper onClick={onClick}>{children}</Wrapper>\r\n        )\r\n    }\r\n\r\n    return to ? renderLink() : renderBtn();\r\n}\r\n\r\n\r\nexport default Button;","export enum PAGE_PATHS {\r\n    HOME = '/',\r\n    MEMO = '/memo',\r\n    TRASH = '/trash',\r\n}","import React from 'react';\r\nimport { Main } from '../../styles/BaseStyle';\r\nimport {Button} from '../base';\r\nimport { PAGE_PATHS } from '../../constants';\r\n\r\nconst HomeMain: React.FC = () => {\r\n    return (\r\n        <Main>\r\n            <Button to={`${PAGE_PATHS.MEMO}/add`}>새로운 메모</Button>\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default HomeMain;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Side } from '../../styles/BaseStyle';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { PAGE_PATHS } from '../../constants';\r\n\r\nconst Menu = styled(NavLink)`\r\n    width: 100%;\r\n    display: inline-block;\r\n    &.active {\r\n        background: red;\r\n    }\r\n`;\r\n\r\nconst HomeSide: React.FC = () => {\r\n    return (\r\n        <Side>\r\n            <h2>Home</h2>\r\n            <ul>\r\n                <li><Menu to={PAGE_PATHS.MEMO} activeClassName=\"active\">메모</Menu></li>\r\n                <li><Menu to={PAGE_PATHS.TRASH} activeClassName=\"active\">쓰레기통</Menu></li>\r\n            </ul>\r\n        </Side>\r\n    )\r\n}\r\n\r\nexport default HomeSide;","import React, {Component} from 'react';\r\nimport { Layout, Container } from '../styles/BaseStyle';\r\nimport { HomeMain, HomeSide } from '../components/home';\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return(\r\n            <Layout>\r\n                <Container>\r\n                    <HomeSide/>\r\n                    <HomeMain/>\r\n                </Container>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Switch,  Route } from 'react-router-dom';\r\nimport { PAGE_PATHS } from '../../constants';\r\nimport { AddMemoContainer, MemoContentContainer } from '../../containers/memo';\r\n\r\nconst MemoRouter: React.FC = (props) => {\r\n    return (\r\n        <Switch>\r\n          <Route path={`${PAGE_PATHS.MEMO}/add`} exact component={AddMemoContainer}/>\r\n          <Route path={`${PAGE_PATHS.MEMO}/:id`} exact component={MemoContentContainer} />\r\n          <Route path={`${PAGE_PATHS.MEMO}/`} exact component={() => <div>메모 없음</div>} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\n\r\nexport default MemoRouter;","import React from 'react';\r\nimport {TrashRouter} from '../../routes';\r\nimport { Main } from '../../styles/BaseStyle';\r\n\r\nconst TrashMain: React.FC = () => {\r\n    return (\r\n        <Main>\r\n            <TrashRouter/>\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default TrashMain;","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Side, SideBackBtn } from '../../styles/BaseStyle';\r\nimport { PAGE_PATHS } from '../../constants';\r\nimport { Memo } from '../../types/memo';\r\nimport styled from 'styled-components';\r\n\r\nconst Menu = styled(NavLink)`\r\n    width: 100%;\r\n    display: inline-block;\r\n    &.active {\r\n        background: #948acf;\r\n        color: #fff;\r\n        pointer-events: none;\r\n    }\r\n`;\r\n\r\ninterface TrashItemProps {\r\n    id: number;\r\n    title: string;\r\n}\r\n\r\ninterface TrashProps {\r\n    deletedMemos: Array<Memo>\r\n}\r\n\r\nconst TrashItem: React.FC<TrashItemProps> = ({id, title}) => {\r\n    return(\r\n        <Menu activeClassName=\"active\" to={`${PAGE_PATHS.TRASH}/${id}`}><li>{title}</li></Menu>\r\n    )\r\n}\r\n\r\nconst TrashSide: React.FC<TrashProps> = ({deletedMemos}) => {\r\n    const renderList = deletedMemos.map(val => <TrashItem id={val.id} title={val.title} key={val.id}/>)\r\n    return (\r\n        <Side>\r\n            <SideBackBtn><Link to={PAGE_PATHS.HOME}>{`<`}</Link></SideBackBtn>\r\n            <h2>쓰레기통</h2>\r\n            <ul>\r\n                {renderList}\r\n            </ul>\r\n        </Side>\r\n    )\r\n}\r\n\r\nexport default TrashSide;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../base';\r\nconst Wrapper = styled.section`\r\n    & div {\r\n        white-space: pre;\r\n    }\r\n`;\r\n\r\ninterface Props {\r\n    createdAt: number;\r\n    content: string;\r\n    onRestore(): void;\r\n}\r\n\r\nconst TrashContent: React.FC<Props> = ({createdAt, content, onRestore}) => {\r\n    const createdAtToDate = new Date(createdAt).toLocaleString();\r\n    return(\r\n        <React.Fragment>\r\n            <Button onClick={onRestore}>복구</Button>\r\n            <Wrapper>\r\n                <div>{createdAtToDate}</div>\r\n                <div>{content}</div>\r\n            </Wrapper>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TrashContent;","import { Memo } from '../../types/memo';\r\n\r\n// 액션 타입 정의\r\nconst ADD_MEMO = \"memo/ADD_MEMO\";\r\nconst DELETE_MEMO = \"memo/DELETE_MEMO\"\r\nconst RESTORE_MEMO = \"memo/RESTORE_MEMO\"\r\n// 액션 생성 함수 정의\r\nexport interface AddMemoAction {\r\n    type: typeof ADD_MEMO;\r\n    payload: Memo;\r\n}\r\nlet id = 3;\r\nexport const addMemo = (title: string, content: string, createdAt: number): AddMemoAction => ({type: ADD_MEMO, payload: {\r\n    id: id++,\r\n    title, content, createdAt\r\n}})\r\n\r\nexport interface DeleteMemoAction {\r\n    type: typeof DELETE_MEMO;\r\n    payload: Memo;\r\n}\r\nexport const deleteMemo = (memo: Memo): DeleteMemoAction => ({\r\n    type: DELETE_MEMO,\r\n    payload: memo\r\n}) \r\n\r\nexport interface RestoreMemoAction {\r\n    type: typeof RESTORE_MEMO;\r\n    payload: Memo;\r\n}\r\n\r\nexport const restoreMemo = (memo: Memo):RestoreMemoAction => ({\r\n    type: RESTORE_MEMO,\r\n    payload: memo\r\n})\r\n\r\nexport const MemoActions = {\r\n    addMemo,\r\n    deleteMemo,\r\n    restoreMemo\r\n}\r\n\r\nexport type MemoActionTypes = AddMemoAction | DeleteMemoAction | RestoreMemoAction;\r\n\r\n// 초기 상태 정의\r\nexport interface MemoState {\r\n    memoList: Array<Memo>\r\n    deletedMemos: Array<Memo>\r\n}\r\n\r\nconst initState: MemoState = {\r\n    memoList: [{\r\n        id: 1,\r\n        title: \"첫 번째\",\r\n        content: \"첫 번째 글입니다.\",\r\n        createdAt: Date.now(),\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"두 번째\",\r\n        content: \"두 번째 글입니다.\",\r\n        createdAt: Date.now(),\r\n    }],\r\n    deletedMemos: []\r\n}\r\n\r\n// 리듀서\r\nexport default function memo(state = initState, action: MemoActionTypes){\r\n    switch(action.type){\r\n        case ADD_MEMO: \r\n            return {\r\n                ...state,\r\n                memoList: [...state.memoList, action.payload]\r\n            }\r\n        case DELETE_MEMO:\r\n            return {\r\n                ...state,\r\n                memoList: state.memoList.filter(val => val.id !== action.payload.id),\r\n                deletedMemos: [...state.deletedMemos, action.payload].sort((a,b) => a.id - b.id),\r\n            }\r\n        case RESTORE_MEMO :\r\n            return {\r\n                ...state,\r\n                memoList: [...state.memoList, action.payload].sort((a,b) => a.id - b.id),\r\n                deletedMemos: state.deletedMemos.filter(val => val.id !== action.payload.id),    \r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { RouteComponentProps, withRouter, Redirect } from 'react-router-dom';\r\nimport { TrashMain, TrashSide} from '../../components/trash';\r\nimport { Container } from '../../styles/BaseStyle';\r\nimport { RootState } from '../../store/modules';\r\nimport { MemoState, MemoActions } from '../../store/modules/memo';\r\nimport { PAGE_PATHS } from '../../constants';\r\n\r\ninterface Props extends RouteComponentProps {\r\n    memoState: MemoState;\r\n    memoActions : typeof MemoActions;   \r\n}\r\n\r\nclass TrashContainer extends Component<Props> {\r\n    render() {\r\n        const {deletedMemos} = this.props.memoState;\r\n        const { match } = this.props;\r\n        \r\n        if(match.isExact && deletedMemos.length > 0){\r\n            return <Redirect to={`${PAGE_PATHS.TRASH}/${deletedMemos[0].id}`}/>\r\n        }\r\n        return (\r\n            <Container>\r\n                <TrashSide deletedMemos={deletedMemos}/>\r\n                <TrashMain/>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({memo}: RootState) => ({\r\n    memoState: memo\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    memoActions: bindActionCreators(MemoActions, dispatch),\r\n});\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(TrashContainer))","import React, { Component } from 'react';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps, withRouter, Redirect } from 'react-router-dom';\r\nimport { MemoState, MemoActions } from '../../store/modules/memo';\r\nimport { RootState } from '../../store/modules';\r\nimport { PAGE_PATHS } from '../../constants';\r\nimport { TrashContent} from '../../components/trash';\r\n\r\ninterface Props extends RouteComponentProps<{id: string}> {\r\n    memoState: MemoState;\r\n    memoActions: typeof MemoActions;\r\n}\r\n\r\nclass TrashContentContainer extends Component<Props> {\r\n    render(){\r\n        const { deletedMemos } = this.props.memoState;\r\n        const { match } = this.props;\r\n        const { restoreMemo } = this.props.memoActions;\r\n        const renderPage = () => {\r\n            const findMemo = deletedMemos.find(val => val.id === parseInt(match.params.id));\r\n            if(findMemo){\r\n                return <TrashContent createdAt={findMemo.createdAt} content={findMemo.content} onRestore={() => restoreMemo(findMemo)}/>\r\n            }\r\n            return <Redirect to={PAGE_PATHS.TRASH}/>\r\n        }   \r\n\r\n        return (\r\n            <React.Fragment>\r\n                {renderPage()}\r\n            </React.Fragment>\r\n        )\r\n    }  \r\n}\r\n\r\nconst mapStateToProps = ({memo}: RootState) => ({\r\n    memoState: memo,\r\n})\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    memoActions: bindActionCreators(MemoActions, dispatch),\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(TrashContentContainer));","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { PAGE_PATHS } from '../../constants';\r\nimport {TrashContentContainer} from '../../containers/trash';\r\nconst TrashRouter: React.FC = () => {\r\n    return(\r\n        <Switch>\r\n            <Route exact path= {`${PAGE_PATHS.TRASH}/:id`} component = {TrashContentContainer}/>\r\n            <Route exact path= {`${PAGE_PATHS.TRASH}`} component = {() => <div>휴지통이 비었습니다.</div>} />\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default TrashRouter","import React from 'react';\r\nimport {MemoRouter} from '../../routes';\r\nimport { Main } from '../../styles/BaseStyle';\r\nimport { Button } from '../base';\r\nimport { PAGE_PATHS } from '../../constants';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nconst MemoMain: React.FC<RouteComponentProps> = (props) => {\r\n    const {location} = props;\r\n    return (\r\n        <Main>\r\n            {location.pathname!==`${PAGE_PATHS.MEMO}/add` && <Button to={`${PAGE_PATHS.MEMO}/add`}>새로운 메모</Button>}\r\n            <MemoRouter/>\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default withRouter(MemoMain);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport { Side, SideBackBtn } from '../../styles/BaseStyle';\r\nimport { PAGE_PATHS } from '../../constants';\r\nimport { Memo } from '../../types/memo';\r\n\r\n\r\n\r\nconst Menu = styled(NavLink)`\r\n    width: 100%;\r\n    display: inline-block;\r\n    &.active {\r\n        background: #948acf;\r\n        color: #fff;\r\n        pointer-events: none;\r\n    }\r\n`;\r\n\r\ninterface MemoItemProps {\r\n    id: number;\r\n    title: string;\r\n}\r\n\r\ninterface MemoSideProps {\r\n    memoList: Array<Memo>;\r\n}\r\n\r\nconst MemoItem: React.FC<MemoItemProps> = ({id, title}) => {\r\n    return(\r\n        <Menu activeClassName=\"active\" to={`${PAGE_PATHS.MEMO}/${id}`}><li>{title}</li></Menu>\r\n    )\r\n}\r\n\r\nconst MemoSide: React.FC<MemoSideProps> = ({memoList}) => {\r\n    const renderList = memoList.map(val => <MemoItem id={val.id} title={val.title} key={val.id}/>)\r\n    return (\r\n        <Side>\r\n            <SideBackBtn><Link to={PAGE_PATHS.HOME}>{`<`}</Link></SideBackBtn>\r\n            <h2>메모</h2>\r\n            <ul>\r\n                { renderList }\r\n            </ul>\r\n        </Side>\r\n    )\r\n}\r\n\r\nexport default MemoSide;","import React, { useState, ChangeEvent, FormEvent } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../base';\r\nimport { PAGE_PATHS } from '../../constants';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nconst Wrapper = styled.section`\r\n    & input, textarea {\r\n        width : 97%;\r\n        border: 1px solid #ccc;\r\n        border-radius: 4px;\r\n        padding: 10px;\r\n        margin-bottom: 15px;\r\n    }\r\n    & textarea {\r\n        height: 200px;\r\n        resize: vertical;\r\n    }\r\n`; \r\n\r\ninterface Props extends RouteComponentProps {\r\n    onSave(title: string, content: string, createdAt: number): void;\r\n}\r\n\r\nconst AddMemo: React.FC<Props> = (props) => {\r\n    const { onSave, history } = props\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n\r\n    const onTitleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        setTitle(e.target.value);\r\n    }\r\n    const onContentChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        e.preventDefault();\r\n        setContent(e.target.value);\r\n    }\r\n    const onSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        onClickSave();\r\n    } \r\n\r\n    const onClickSave = () => {\r\n        if(title && content){\r\n            onSave(title, content, Date.now());\r\n            history.replace(`${PAGE_PATHS.MEMO}`);\r\n        }\r\n        else {\r\n            window.alert(\"메모를 모두 채워주세요\");\r\n        }\r\n    }\r\n    return(\r\n        <Wrapper>\r\n            <form onSubmit={onSubmit}>\r\n                <input type='text' onChange={onTitleChange} placeholder='제목을 입력해주세요.'/>\r\n                <textarea onChange={onContentChange} placeholder='메모를 입력해주세요.'/>\r\n            </form>\r\n            <Button onClick={onClickSave}>저장</Button>\r\n            <Button to={PAGE_PATHS.MEMO}>취소</Button>\r\n        </Wrapper>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(AddMemo);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Button } from '../base'\r\nconst Wrapper = styled.section`\r\n    & div {\r\n        white-space: pre;\r\n    }\r\n`;\r\n\r\ninterface Props {\r\n    createdAt: number;\r\n    content: string;\r\n    onDelete(): void;\r\n}\r\n\r\nconst MemoContent: React.FC<Props> = ({createdAt, content, onDelete}) => {\r\n    const createdAtToDate = new Date(createdAt).toLocaleString();\r\n    return(\r\n        <React.Fragment>\r\n            <Button onClick={onDelete}>삭제</Button>\r\n            <Wrapper>\r\n                <div>{createdAtToDate}</div>\r\n                <div>{content}</div>\r\n            </Wrapper>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MemoContent;","import React, { Component } from 'react';\r\nimport { RouteComponentProps, withRouter, Redirect } from 'react-router-dom';\r\nimport { Container } from '../../styles/BaseStyle';\r\nimport { MemoMain, MemoSide } from '../../components/memo';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { MemoActions, MemoState } from '../../store/modules/memo';\r\nimport { RootState } from '../../store/modules';\r\nimport { PAGE_PATHS } from '../../constants';\r\n\r\ninterface Props extends RouteComponentProps {\r\n    memoState: MemoState;\r\n    memoActions: typeof MemoActions;\r\n}\r\n\r\nclass MemoContainer extends Component<Props> {\r\n    render() {\r\n        const {memoList} = this.props.memoState;\r\n        const {match} = this.props;\r\n        if(match.isExact && memoList.length > 0){\r\n            return <Redirect to={`${PAGE_PATHS.MEMO}/${memoList[0].id}`}/>\r\n        }\r\n\r\n        return(\r\n            <Container>\r\n                <MemoSide memoList={memoList}/>\r\n                <MemoMain/>\r\n            </Container>\r\n        );\r\n    } \r\n}\r\n\r\nconst mapStateToProps = ({memo}: RootState) => ({\r\n    memoState: memo,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    memoActions: bindActionCreators(MemoActions, dispatch),\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(MemoContainer));","import React, { Component } from 'react';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { AddMemo } from '../../components/memo';\r\nimport { RootState } from '../../store/modules';\r\nimport { MemoState, MemoActions } from '../../store/modules/memo';\r\n\r\ninterface Props extends MemoState {\r\n    memoActions: typeof MemoActions;\r\n}\r\n\r\nclass AddMemoContainer extends Component<Props> {\r\n    render(){\r\n        const {addMemo} = this.props.memoActions;\r\n        return(\r\n            <AddMemo onSave={addMemo}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({memo}: RootState) => ({\r\n    memoList: memo.memoList\r\n});\r\n\r\nconst mapDispatchToProps = ( dispatch : Dispatch ) => ({\r\n   memoActions: bindActionCreators(MemoActions, dispatch),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(AddMemoContainer);","import React, {Component} from 'react';\r\nimport { withRouter, RouteComponentProps, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch, bindActionCreators } from 'redux';\r\nimport { MemoContent } from '../../components/memo'\r\nimport { MemoState, MemoActions } from '../../store/modules/memo';\r\nimport { RootState } from '../../store/modules';\r\nimport { PAGE_PATHS } from '../../constants';\r\n\r\ninterface Props extends RouteComponentProps<{id: string}>{\r\n    memoState: MemoState\r\n    memoActions: typeof MemoActions;\r\n}\r\nclass MemoContentContainer extends Component<Props> {\r\n    render(){\r\n        const { memoList } = this.props.memoState;\r\n        const { deleteMemo } = this.props.memoActions;\r\n        const { match } = this.props;\r\n        const renderPage = () => {\r\n            const findMemo = memoList.find(val => val.id === parseInt(match.params.id));\r\n            if(findMemo){\r\n                return <MemoContent createdAt={findMemo.createdAt} content={findMemo.content} onDelete= {() => deleteMemo(findMemo)}/>\r\n            }\r\n            return <Redirect to={PAGE_PATHS.MEMO}/>\r\n        }   \r\n\r\n        return (\r\n            <React.Fragment>\r\n                {renderPage()}\r\n            </React.Fragment>\r\n        )\r\n    }        \r\n}\r\n\r\nconst mapStateToProps = ({memo}: RootState) => ({\r\n    memoState: memo,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    memoActions: bindActionCreators(MemoActions, dispatch),\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(MemoContentContainer));","import React from 'react';\r\nimport { Layout } from '../styles/BaseStyle';\r\nimport { MemoContainer } from '../containers/memo';\r\n\r\nconst Memo: React.FC = () => {\r\n    return(\r\n        <Layout>\r\n            <MemoContainer/>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Memo;","import React from 'react';\r\nimport { Layout } from '../styles/BaseStyle';\r\nimport { TrashContainer } from '../containers/trash';\r\n\r\n\r\nconst Trash: React.FC = () => {\r\n    return(\r\n        <Layout>\r\n            <TrashContainer/>\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Trash;","import React, {Component} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport { Home, Memo, Trash } from './pages';\nimport { PAGE_PATHS } from './constants';\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path={PAGE_PATHS.HOME} component={Home}/>\n          <Route path={PAGE_PATHS.MEMO} component={Memo}/>\n          <Route path={PAGE_PATHS.TRASH} component={Trash}/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    body, div, ul, li, dl, dd, dt, ol, h1, h2, h3, h4, h5, h6, input, fieldset, legend, p, select, table, th, td, tr, textarea, button, form, figure, figcaption {\r\n      padding: 0;\r\n      margin: 0;\r\n    }\r\n    \r\n    a{\r\n      color: #222;\r\n      text-decoration:none;\r\n    }\r\n    body, input, textarea, select, button, table {\r\n      font-family: 'Nanum Gothic', sans-serif;\r\n      color: #222;\r\n      font-size: 13px;\r\n      line-height: 1.5;\r\n    }\r\n\r\n    em, address {\r\n      font-style: normal\r\n    }\r\n\r\n    dl, ul, li, ol, menu {\r\n      list-style: none;\r\n    }\r\n\r\n     h1, h2, h3, h4, h5, h6 {\r\n       font-size: 13px;\r\n       font-weight: normal;\r\n    }\r\n    \r\n    button {\r\n      border: 0;\r\n    }\r\n\r\n    img, fieldset {\r\n      border: 0 none;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;","import {combineReducers } from 'redux';\r\nimport memo, { MemoState } from './memo';\r\n\r\nexport interface RootState {\r\n    memo: MemoState;\r\n}\r\n\r\nexport default combineReducers({\r\n    memo,\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalStyle } from './styles';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/modules';\n\nconst store = createStore(rootReducer,  \n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__());\n  \nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}